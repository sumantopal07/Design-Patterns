Command Pattern: 
        --> Main Idea:
                --> Encapsulation of Commands.  
                --> The Command Pattern allows you to decouple the requester of an action
                    from the object that actually performs the action.
        
        --> The Command Pattern encapsulates a request as an
            object, thereby letting you parameterize other objects
            with different requests, queue or log requests, and support
            undoable operations.

When to Use:
        --> Need of MacroCommands or Undo Operations.
        


Thought Process:
            --> Home Automation System. 
            --> Consider a situation of ordering a meal in a restaurant.



Design Principle

    Identify the aspects of your
    application that vary and separate
    them from what stays the same. 

    Program to an interface, not an
    implementation

    Favor composition over inheritance.

    Strive for loosely coupled designs
    between objects that interact.

    Classes should be open
    for extension, but closed for
    modifi cation.

    Conditionals returning provokes if-else 
    condtions in your system.(*BAD THING)

    designs should closed for modificatiion
    but open for extension.

    identify the aspects that vary and 
    separate them from what stays the same.

    Depend upon abstractions. Do not
    depend upon concrete classes.